Y[1,i]=abs(rnorm(1,1,1))}
for (t in 1:(tmax-1)){
Y[t+1,1] = Y[t,1]*exp(4-4*Y[t,1]-2*Y[t,2]-0.4*Y[t,3]+rnorm(1,0,sigma))
Y[t+1,2] = Y[t,2]*exp(3.1-0.31*Y[t,1]-3.1*Y[t,2]-0.93*Y[t,3]+rnorm(1,0,sigma))
Y[t+1,3] = Y[t,3]*exp(0.12 + 0.636*Y[t,1]+0.636*Y[t,2]-2.12*Y[t,3]+rnorm(1,0,sigma))
### Connecting the two sets by being influenced by all three and having an effect on 5
Y[t+1,4] = Y[t,4]*exp(3-0.111*Y[t,1]-0.111*Y[t,2]+0.131*Y[t,3]-3.8*Y[t,4]+rnorm(1,0,sigma))
### Influenced by 4 and also 5,6,7
Y[t+1,5] = Y[t,5]*exp(3-2*Y[t,5]-2*Y[t,6]-0.4*Y[t,7]+0.5*Y[t+1,4]+ rnorm(1,0,sigma))
###
Y[t+1,6] = Y[t,6]*exp(3.1-0.31*Y[t,5]-3.1*Y[t,6]-0.93*Y[t,7]+rnorm(1,0,sigma))
Y[t+1,7] = Y[t,7]*exp(0.4 + 0.636*Y[t,5]+0.636*Y[t,6]-2.12*Y[t,7]+rnorm(1,0,sigma))
Y[t+1,8] = Y[t,8]*exp(4-4*Y[t,8]-2*Y[t,9]-0.4*Y[t,10]+rnorm(1,0,sigma))
Y[t+1,9] = Y[t,9]*exp(3.1-0.31*Y[t,8]-3.1*Y[t,9]-0.93*Y[t,10]+rnorm(1,0,sigma))
Y[t+1,10] = Y[t,10]*exp(0.12 + 0.636*Y[t,8]+0.636*Y[t,9]-2.12*Y[t,10]+rnorm(1,0,sigma))
}
y=log(Y)
y=y-mean(y)
causality_matrix = rbind(c(1,1,1,0,0,0,0,0,0,0),
c(1,1,1,0,0,0,0,0,0,0),
c(1,1,1,0,0,0,0,0,0,0),
c(1,1,1,1,0,0,0,0,0,0),
c(0,0,0,1,1,1,1,0,0,0),
c(0,0,0,0,1,1,1,0,0,0),
c(0,0,0,0,1,1,1,0,0,0),
c(0,0,0,0,0,0,0,1,1,1),
c(0,0,0,0,0,0,0,1,1,1),
c(0,0,0,0,0,0,0,1,1,1))
causality_matrix
p_value=matrix(0,nrow=nspecies,ncol=nspecies)
for (i in 1:nspecies){
for (j in 1:nspecies){
# cause first and effet later in grangertest()
if (i !=j){
g=grangertest(Y[,j],Y[,i],order=5)
p_value[i,j] =  g$`Pr(>F)`[2]
}
}
}
G_5=(p_value<0.05)
G_5
### Two sets of 3 species connected by 1, plus 1 set of 3 unconnected species
tmax=300
nspecies=10
sigma=0.1
Y=matrix(1,nrow=tmax,ncol=nspecies)
for (i in 1:nspecies){
Y[1,i]=abs(rnorm(1,1,1))}
for (t in 1:(tmax-1)){
Y[t+1,1] = Y[t,1]*exp(4-4*Y[t,1]-2*Y[t,2]-0.4*Y[t,3]+rnorm(1,0,sigma))
Y[t+1,2] = Y[t,2]*exp(3.1-0.31*Y[t,1]-3.1*Y[t,2]-0.93*Y[t,3]+rnorm(1,0,sigma))
Y[t+1,3] = Y[t,3]*exp(0.12 + 0.636*Y[t,1]+0.636*Y[t,2]-2.12*Y[t,3]+rnorm(1,0,sigma))
### Connecting the two sets by being influenced by all three and having an effect on 5
Y[t+1,4] = Y[t,4]*exp(3-0.111*Y[t,1]-0.111*Y[t,2]+0.131*Y[t,3]-3.8*Y[t,4]+rnorm(1,0,sigma))
### Influenced by 4 and also 5,6,7
Y[t+1,5] = Y[t,5]*exp(3-2*Y[t,5]-2*Y[t,6]-0.4*Y[t,7]+0.5*Y[t+1,4]+ rnorm(1,0,sigma))
###
Y[t+1,6] = Y[t,6]*exp(3.1-0.31*Y[t,5]-3.1*Y[t,6]-0.93*Y[t,7]+rnorm(1,0,sigma))
Y[t+1,7] = Y[t,7]*exp(0.4 + 0.636*Y[t,5]+0.636*Y[t,6]-2.12*Y[t,7]+rnorm(1,0,sigma))
Y[t+1,8] = Y[t,8]*exp(4-4*Y[t,8]-2*Y[t,9]-0.4*Y[t,10]+rnorm(1,0,sigma))
Y[t+1,9] = Y[t,9]*exp(3.1-0.31*Y[t,8]-3.1*Y[t,9]-0.93*Y[t,10]+rnorm(1,0,sigma))
Y[t+1,10] = Y[t,10]*exp(0.12 + 0.636*Y[t,8]+0.636*Y[t,9]-2.12*Y[t,10]+rnorm(1,0,sigma))
}
y=log(Y)
y=y-mean(y)
causality_matrix = rbind(c(1,1,1,0,0,0,0,0,0,0),
c(1,1,1,0,0,0,0,0,0,0),
c(1,1,1,0,0,0,0,0,0,0),
c(1,1,1,1,0,0,0,0,0,0),
c(0,0,0,1,1,1,1,0,0,0),
c(0,0,0,0,1,1,1,0,0,0),
c(0,0,0,0,1,1,1,0,0,0),
c(0,0,0,0,0,0,0,1,1,1),
c(0,0,0,0,0,0,0,1,1,1),
c(0,0,0,0,0,0,0,1,1,1))
causality_matrix
p_value=matrix(0,nrow=nspecies,ncol=nspecies)
for (i in 1:nspecies){
for (j in 1:nspecies){
# cause first and effet later in grangertest()
if (i !=j){
g=grangertest(Y[,j],Y[,i],order=5)
p_value[i,j] =  g$`Pr(>F)`[2]
}
}
}
G_5=(p_value<0.05)
G_5
### Two sets of 3 species connected by 1, plus 1 set of 3 unconnected species
tmax=3000
nspecies=10
sigma=0.1
Y=matrix(1,nrow=tmax,ncol=nspecies)
for (i in 1:nspecies){
Y[1,i]=abs(rnorm(1,1,1))}
for (t in 1:(tmax-1)){
Y[t+1,1] = Y[t,1]*exp(4-4*Y[t,1]-2*Y[t,2]-0.4*Y[t,3]+rnorm(1,0,sigma))
Y[t+1,2] = Y[t,2]*exp(3.1-0.31*Y[t,1]-3.1*Y[t,2]-0.93*Y[t,3]+rnorm(1,0,sigma))
Y[t+1,3] = Y[t,3]*exp(0.12 + 0.636*Y[t,1]+0.636*Y[t,2]-2.12*Y[t,3]+rnorm(1,0,sigma))
### Connecting the two sets by being influenced by all three and having an effect on 5
Y[t+1,4] = Y[t,4]*exp(3-0.111*Y[t,1]-0.111*Y[t,2]+0.131*Y[t,3]-3.8*Y[t,4]+rnorm(1,0,sigma))
### Influenced by 4 and also 5,6,7
Y[t+1,5] = Y[t,5]*exp(3-2*Y[t,5]-2*Y[t,6]-0.4*Y[t,7]+0.5*Y[t+1,4]+ rnorm(1,0,sigma))
###
Y[t+1,6] = Y[t,6]*exp(3.1-0.31*Y[t,5]-3.1*Y[t,6]-0.93*Y[t,7]+rnorm(1,0,sigma))
Y[t+1,7] = Y[t,7]*exp(0.4 + 0.636*Y[t,5]+0.636*Y[t,6]-2.12*Y[t,7]+rnorm(1,0,sigma))
Y[t+1,8] = Y[t,8]*exp(4-4*Y[t,8]-2*Y[t,9]-0.4*Y[t,10]+rnorm(1,0,sigma))
Y[t+1,9] = Y[t,9]*exp(3.1-0.31*Y[t,8]-3.1*Y[t,9]-0.93*Y[t,10]+rnorm(1,0,sigma))
Y[t+1,10] = Y[t,10]*exp(0.12 + 0.636*Y[t,8]+0.636*Y[t,9]-2.12*Y[t,10]+rnorm(1,0,sigma))
}
y=log(Y)
y=y-mean(y)
causality_matrix = rbind(c(1,1,1,0,0,0,0,0,0,0),
c(1,1,1,0,0,0,0,0,0,0),
c(1,1,1,0,0,0,0,0,0,0),
c(1,1,1,1,0,0,0,0,0,0),
c(0,0,0,1,1,1,1,0,0,0),
c(0,0,0,0,1,1,1,0,0,0),
c(0,0,0,0,1,1,1,0,0,0),
c(0,0,0,0,0,0,0,1,1,1),
c(0,0,0,0,0,0,0,1,1,1),
c(0,0,0,0,0,0,0,1,1,1))
causality_matrix
p_value=matrix(0,nrow=nspecies,ncol=nspecies)
for (i in 1:nspecies){
for (j in 1:nspecies){
# cause first and effet later in grangertest()
if (i !=j){
g=grangertest(Y[,j],Y[,i],order=5)
p_value[i,j] =  g$`Pr(>F)`[2]
}
}
}
G_5=(p_value<0.05)
G_5
### Two sets of 3 species connected by 1, plus 1 set of 3 unconnected species
tmax=3000
nspecies=10
sigma=0.1
Y=matrix(1,nrow=tmax,ncol=nspecies)
for (i in 1:nspecies){
Y[1,i]=abs(rnorm(1,1,1))}
for (t in 1:(tmax-1)){
Y[t+1,1] = Y[t,1]*exp(4-4*Y[t,1]-2*Y[t,2]-0.4*Y[t,3]+rnorm(1,0,sigma))
Y[t+1,2] = Y[t,2]*exp(3.1-0.31*Y[t,1]-3.1*Y[t,2]-0.93*Y[t,3]+rnorm(1,0,sigma))
Y[t+1,3] = Y[t,3]*exp(0.12 + 0.636*Y[t,1]+0.636*Y[t,2]-2.12*Y[t,3]+rnorm(1,0,sigma))
### Connecting the two sets by being influenced by all three and having an effect on 5
Y[t+1,4] = Y[t,4]*exp(3-0.111*Y[t,1]-0.111*Y[t,2]+0.131*Y[t,3]-3.8*Y[t,4]+rnorm(1,0,sigma))
### Influenced by 4 and also 5,6,7
Y[t+1,5] = Y[t,5]*exp(3-2*Y[t,5]-2*Y[t,6]-0.4*Y[t,7]+0.5*Y[t+1,4]+ rnorm(1,0,sigma))
###
Y[t+1,6] = Y[t,6]*exp(3.1-0.31*Y[t,5]-3.1*Y[t,6]-0.93*Y[t,7]+rnorm(1,0,sigma))
Y[t+1,7] = Y[t,7]*exp(0.4 + 0.636*Y[t,5]+0.636*Y[t,6]-2.12*Y[t,7]+rnorm(1,0,sigma))
Y[t+1,8] = Y[t,8]*exp(4-4*Y[t,8]-2*Y[t,9]-0.4*Y[t,10]+rnorm(1,0,sigma))
Y[t+1,9] = Y[t,9]*exp(3.1-0.31*Y[t,8]-3.1*Y[t,9]-0.93*Y[t,10]+rnorm(1,0,sigma))
Y[t+1,10] = Y[t,10]*exp(0.12 + 0.636*Y[t,8]+0.636*Y[t,9]-2.12*Y[t,10]+rnorm(1,0,sigma))
}
y=log(Y)
y=y-mean(y)
causality_matrix = rbind(c(1,1,1,0,0,0,0,0,0,0),
c(1,1,1,0,0,0,0,0,0,0),
c(1,1,1,0,0,0,0,0,0,0),
c(1,1,1,1,0,0,0,0,0,0),
c(0,0,0,1,1,1,1,0,0,0),
c(0,0,0,0,1,1,1,0,0,0),
c(0,0,0,0,1,1,1,0,0,0),
c(0,0,0,0,0,0,0,1,1,1),
c(0,0,0,0,0,0,0,1,1,1),
c(0,0,0,0,0,0,0,1,1,1))
causality_matrix
p_value=matrix(0,nrow=nspecies,ncol=nspecies)
for (i in 1:nspecies){
for (j in 1:nspecies){
# cause first and effet later in grangertest()
if (i !=j){
g=grangertest(Y[,j],Y[,i],order=5)
p_value[i,j] =  g$`Pr(>F)`[2]
}
}
}
G_5=(p_value<0.05)
G_5
### Two sets of 3 species connected by 1, plus 1 set of 3 unconnected species
tmax=3000
nspecies=10
sigma=0.1
Y=matrix(1,nrow=tmax,ncol=nspecies)
for (i in 1:nspecies){
Y[1,i]=abs(rnorm(1,1,1))}
for (t in 1:(tmax-1)){
Y[t+1,1] = Y[t,1]*exp(4-4*Y[t,1]-2*Y[t,2]-0.4*Y[t,3]+rnorm(1,0,sigma))
Y[t+1,2] = Y[t,2]*exp(3.1-0.31*Y[t,1]-3.1*Y[t,2]-0.93*Y[t,3]+rnorm(1,0,sigma))
Y[t+1,3] = Y[t,3]*exp(0.12 + 0.636*Y[t,1]+0.636*Y[t,2]-2.12*Y[t,3]+rnorm(1,0,sigma))
### Connecting the two sets by being influenced by all three and having an effect on 5
Y[t+1,4] = Y[t,4]*exp(3-0.111*Y[t,1]-0.111*Y[t,2]+0.131*Y[t,3]-3.8*Y[t,4]+rnorm(1,0,sigma))
### Influenced by 4 and also 5,6,7
Y[t+1,5] = Y[t,5]*exp(3-2*Y[t,5]-2*Y[t,6]-0.4*Y[t,7]+0.5*Y[t+1,4]+ rnorm(1,0,sigma))
###
Y[t+1,6] = Y[t,6]*exp(3.1-0.31*Y[t,5]-3.1*Y[t,6]-0.93*Y[t,7]+rnorm(1,0,sigma))
Y[t+1,7] = Y[t,7]*exp(0.4 + 0.636*Y[t,5]+0.636*Y[t,6]-2.12*Y[t,7]+rnorm(1,0,sigma))
Y[t+1,8] = Y[t,8]*exp(4-4*Y[t,8]-2*Y[t,9]-0.4*Y[t,10]+rnorm(1,0,sigma))
Y[t+1,9] = Y[t,9]*exp(3.1-0.31*Y[t,8]-3.1*Y[t,9]-0.93*Y[t,10]+rnorm(1,0,sigma))
Y[t+1,10] = Y[t,10]*exp(0.12 + 0.636*Y[t,8]+0.636*Y[t,9]-2.12*Y[t,10]+rnorm(1,0,sigma))
}
y=log(Y)
y=y-mean(y)
causality_matrix = rbind(c(1,1,1,0,0,0,0,0,0,0),
c(1,1,1,0,0,0,0,0,0,0),
c(1,1,1,0,0,0,0,0,0,0),
c(1,1,1,1,0,0,0,0,0,0),
c(0,0,0,1,1,1,1,0,0,0),
c(0,0,0,0,1,1,1,0,0,0),
c(0,0,0,0,1,1,1,0,0,0),
c(0,0,0,0,0,0,0,1,1,1),
c(0,0,0,0,0,0,0,1,1,1),
c(0,0,0,0,0,0,0,1,1,1))
causality_matrix
p_value=matrix(0,nrow=nspecies,ncol=nspecies)
for (i in 1:nspecies){
for (j in 1:nspecies){
# cause first and effet later in grangertest()
if (i !=j){
g=grangertest(Y[,j],Y[,i],order=5)
p_value[i,j] =  g$`Pr(>F)`[2]
}
}
}
G_5=(p_value<0.05)
G_5
p_value
G_1=(p_value<0.01)
G_1
### Plotting
miny=min(y[101:201,])
maxy=max(y[101:201,])
vec_col=c("black","blue","green","cyan","yellow","orange","red","pink","pink","pink")
for (i in 1:nspecies){
plot(101:201,y[101:201,1],type="o",col=vec_col[i],ylim=c(miny,maxy))
}
### Plotting
miny=min(y[101:201,])
maxy=max(y[101:201,])
vec_col=c("black","blue","green","cyan","yellow","orange","red","pink","pink","pink")
for (i in 1:nspecies){
if (i==1){plot(101:201,y[101:201,1],type="o",col=vec_col[i],ylim=c(miny,maxy))}
lines(101:201,y[101:201,1],type="o",col=vec_col[i],ylim=c(miny,maxy))
}
### Plotting
miny=min(y[101:201,])
maxy=max(y[101:201,])
vec_col=c("black","blue","green","cyan","yellow","orange","red","pink","pink","pink")
for (i in 1:nspecies){
if (i==1){plot(101:201,y[101:201,i],type="o",col=vec_col[i],ylim=c(miny,maxy))}
lines(101:201,y[101:201,i],type="o",col=vec_col[i],ylim=c(miny,maxy))
}
var(y=y,type="none",order=1)
libray("vars")
VAR(y=y,type="none",order=1)
libray(vars)
library(vars)
VAR(y=y,type="none",order=1)
var1=VAR(y=y,type="none",p=1)
summary(var1)
p_value1=matrix(0,nrow=nspecies,ncol=nspecies)
for (i in 1:nspecies){
for (j in 1:nspecies){
# cause first and effet later in grangertest()
if (i !=j){
g=grangertest(Y[,j],Y[,i],order=1)
p_value1[i,j] =  g$`Pr(>F)`[2]
}
}
}
G_1=(p_value<0.05)
G_1
G_1=(p_value<0.01)
G_1
var1
coef(var1)
### Two sets of 3 species connected by 1, plus 1 set of 3 unconnected species
tmax=300 ## We are very optimistic, Sugihara et al. also used 3000.
nspecies=10
sigma=0.3 # Sigma^2= 0.1
Y=matrix(1,nrow=tmax,ncol=nspecies)
for (i in 1:nspecies){
Y[1,i]=abs(rnorm(1,1,1))}
for (t in 1:(tmax-1)){
Y[t+1,1] = Y[t,1]*exp(4-4*Y[t,1]-2*Y[t,2]-0.4*Y[t,3]+rnorm(1,0,sigma))
Y[t+1,2] = Y[t,2]*exp(3.1-0.31*Y[t,1]-3.1*Y[t,2]-0.93*Y[t,3]+rnorm(1,0,sigma))
Y[t+1,3] = Y[t,3]*exp(0.12 + 0.636*Y[t,1]+0.636*Y[t,2]-2.12*Y[t,3]+rnorm(1,0,sigma))
### Connecting the two sets by being influenced by all three and having an effect on 5
Y[t+1,4] = Y[t,4]*exp(3-0.111*Y[t,1]-0.111*Y[t,2]+0.131*Y[t,3]-3.8*Y[t,4]+rnorm(1,0,sigma))
### Influenced by 4 and also 5,6,7
Y[t+1,5] = Y[t,5]*exp(3-2*Y[t,5]-2*Y[t,6]-0.4*Y[t,7]+0.5*Y[t+1,4]+ rnorm(1,0,sigma))
###
Y[t+1,6] = Y[t,6]*exp(3.1-0.31*Y[t,5]-3.1*Y[t,6]-0.93*Y[t,7]+rnorm(1,0,sigma))
Y[t+1,7] = Y[t,7]*exp(0.8 + 0.636*Y[t,5]+0.636*Y[t,6]-2.12*Y[t,7]+rnorm(1,0,sigma))
Y[t+1,8] = Y[t,8]*exp(4-4*Y[t,8]-2*Y[t,9]-0.4*Y[t,10]+rnorm(1,0,sigma))
Y[t+1,9] = Y[t,9]*exp(3.1-0.31*Y[t,8]-3.1*Y[t,9]-0.93*Y[t,10]+rnorm(1,0,sigma))
Y[t+1,10] = Y[t,10]*exp(0.12 + 0.636*Y[t,8]+0.636*Y[t,9]-2.12*Y[t,10]+rnorm(1,0,sigma))
}
y=log(Y)
y=y-mean(y)
causality_matrix = rbind(c(1,1,1,0,0,0,0,0,0,0),
c(1,1,1,0,0,0,0,0,0,0),
c(1,1,1,0,0,0,0,0,0,0),
c(1,1,1,1,0,0,0,0,0,0),
c(0,0,0,1,1,1,1,0,0,0),
c(0,0,0,0,1,1,1,0,0,0),
c(0,0,0,0,1,1,1,0,0,0),
c(0,0,0,0,0,0,0,1,1,1),
c(0,0,0,0,0,0,0,1,1,1),
c(0,0,0,0,0,0,0,1,1,1))
causality_matrix
p_value5=matrix(0,nrow=nspecies,ncol=nspecies)
for (i in 1:nspecies){
for (j in 1:nspecies){
# cause first and effet later in grangertest()
if (i !=j){
g=grangertest(Y[,j],Y[,i],order=5)
p_value5[i,j] =  sprintf("%.5f",g$`Pr(>F)`[2])
}
}
}
G_5=(p_value5<0.05)
G_5
require(lmtest)
### Two sets of 3 species connected by 1, plus 1 set of 3 unconnected species
tmax=300 ## We are very optimistic, Sugihara et al. also used 3000.
nspecies=10
sigma=0.3 # Sigma^2= 0.1
Y=matrix(1,nrow=tmax,ncol=nspecies)
for (i in 1:nspecies){
Y[1,i]=abs(rnorm(1,1,1))}
for (t in 1:(tmax-1)){
Y[t+1,1] = Y[t,1]*exp(4-4*Y[t,1]-2*Y[t,2]-0.4*Y[t,3]+rnorm(1,0,sigma))
Y[t+1,2] = Y[t,2]*exp(3.1-0.31*Y[t,1]-3.1*Y[t,2]-0.93*Y[t,3]+rnorm(1,0,sigma))
Y[t+1,3] = Y[t,3]*exp(0.12 + 0.636*Y[t,1]+0.636*Y[t,2]-2.12*Y[t,3]+rnorm(1,0,sigma))
### Connecting the two sets by being influenced by all three and having an effect on 5
Y[t+1,4] = Y[t,4]*exp(3-0.111*Y[t,1]-0.111*Y[t,2]+0.131*Y[t,3]-3.8*Y[t,4]+rnorm(1,0,sigma))
### Influenced by 4 and also 5,6,7
Y[t+1,5] = Y[t,5]*exp(3-2*Y[t,5]-2*Y[t,6]-0.4*Y[t,7]+0.5*Y[t+1,4]+ rnorm(1,0,sigma))
###
Y[t+1,6] = Y[t,6]*exp(3.1-0.31*Y[t,5]-3.1*Y[t,6]-0.93*Y[t,7]+rnorm(1,0,sigma))
Y[t+1,7] = Y[t,7]*exp(0.8 + 0.636*Y[t,5]+0.636*Y[t,6]-2.12*Y[t,7]+rnorm(1,0,sigma))
Y[t+1,8] = Y[t,8]*exp(4-4*Y[t,8]-2*Y[t,9]-0.4*Y[t,10]+rnorm(1,0,sigma))
Y[t+1,9] = Y[t,9]*exp(3.1-0.31*Y[t,8]-3.1*Y[t,9]-0.93*Y[t,10]+rnorm(1,0,sigma))
Y[t+1,10] = Y[t,10]*exp(0.12 + 0.636*Y[t,8]+0.636*Y[t,9]-2.12*Y[t,10]+rnorm(1,0,sigma))
}
y=log(Y)
y=y-mean(y)
causality_matrix = rbind(c(1,1,1,0,0,0,0,0,0,0),
c(1,1,1,0,0,0,0,0,0,0),
c(1,1,1,0,0,0,0,0,0,0),
c(1,1,1,1,0,0,0,0,0,0),
c(0,0,0,1,1,1,1,0,0,0),
c(0,0,0,0,1,1,1,0,0,0),
c(0,0,0,0,1,1,1,0,0,0),
c(0,0,0,0,0,0,0,1,1,1),
c(0,0,0,0,0,0,0,1,1,1),
c(0,0,0,0,0,0,0,1,1,1))
causality_matrix
p_value5=matrix(0,nrow=nspecies,ncol=nspecies)
for (i in 1:nspecies){
for (j in 1:nspecies){
# cause first and effet later in grangertest()
if (i !=j){
g=grangertest(Y[,j],Y[,i],order=5)
p_value5[i,j] =  sprintf("%.5f",g$`Pr(>F)`[2])
}
}
}
G_5=(p_value5<0.05)
G_5
p_value1=matrix(0,nrow=nspecies,ncol=nspecies)
for (i in 1:nspecies){
for (j in 1:nspecies){
# cause first and effet later in grangertest()
if (i !=j){
g=grangertest(Y[,j],Y[,i],order=1)
p_value1[i,j] =  sprintf("%.5f",g$`Pr(>F)`[2])
}
}
}
G_1=(p_value1<0.05)
G_1
G_1=(p_value1<0.01)
G_1
sum(G_1==causality_matrix)/length(as.vector(G_1))
correct_links1=(sum(G_1==causality_matrix)-10)/length(as.vector(G_1)-10)
correct_links5=(sum(G_5==causality_matrix)-10)/length(as.vector(G_5)-10)
correct_links1 #85%
correct_links5 #80%
as.numeric(G_1)
as.matrix(as.numeric(G_1))
as.matrix(as.numeric(G_1),ncol=10)
G_1
G_cause=G_1
G_cause[G_1=="TRUE",]==0
G_cause=G_1
G_cause[,G_1=="TRUE"]==0
G_cause[G_1=="TRUE"]==0
G_cause[G_1=="TRUE"]=0
G_cause=G_1
G_cause[G_1=="TRUE"]=1
G_cause[G_1=="FALSE"]=0
G_cause
G_cause=G_1
G_cause[G_1=="TRUE"] = " & 1"
G_cause[G_1=="FALSE"] = " & 0"
G_cause
G_cause=G_1
G_cause[G_1=="TRUE"] = & 1
G_cause[G_1=="FALSE"] = & 0
18*7
22*7
154/30
q()
date
?date
as.Date(18/11/2010)
as.Date("18/11/2010")
as.Date("18/11/10")
as.Date("13/06/14")-as.Date("18/11/10")
as.Date("13/06/14",format=%d\%m\%y)-as.Date("18/11/10")
as.Date("13/06/14",format=%d%m%y)-as.Date("18/11/10")
as.Date("13/06/14",format=%d/%m/%y)-as.Date("18/11/10",format=%d/%m/%y)
as.Date("13/06/14",format="%d %m %y")-as.Date("18/11/10",format="%d %m %y")
as.Date("13/06/2014",format="%d %m %y")-as.Date("18/11/2010",format="%d %m %y")
as.Date("13/06/14",format="%d%m%y")-as.Date("18/11/10",format="%d%m%y")
as.Date("13/06/14",format="%d%m%y")
as.Date(13/06/14,format="%d%m%y")
as.Date("13/06/14",format="%d%m%y")
as.Date(13/06/14,format="%d/%m/%y")
as.Date("13/06/14",format="%d/%m/%y")
as.Date("13/06/14",format="%d/%m/%y")-as.Date("18/11/10",format="%d/%m/%y")
as.Date("02/02/15",format="%d/%m/%y")-as.Date("25/09/15",format="%d/%m/%y")
235/365.25
as.Date("25/09/15",format="%d/%m/%y")-as.Date("02/02/15",format="%d/%m/%y")
235/365
as.Date("26/10/10",format="%d/%m/%y")-as.Date("01/00/07",format="%d/%m/%y")
as.Date("26/10/10",format="%d/%m/%y")-as.Date("01/09/07",format="%d/%m/%y")
1151/365.25
3.151+6.211
q()
drecov$Date_recovered[drecov$Condition_Euring_code ==7]
drecov$Year[(drecov$Accurancy_of_date_Euring_code %in% c(8,9))]
dringed<-read.csv("data/Gyrs_ringed.csv")
head(dringed) # What's in the data table
length(unique(dringed$Ring_No)) #How many unique bird IDs
setwd("~/Documents/Gyrfalcon_CMR")
dringed<-read.csv("data/Gyrs_ringed.csv")
head(dringed) # What's in the data table
length(unique(dringed$Ring_No)) #How many unique bird IDs
drecov<-read.csv("data/Gyrs_recovered.csv")
head(drecov)
length(unique(drecov$Ring_No)) #How many unique bird IDs in Gyrs_recovered.csv
#dringed$Year=format(as.Date(dringed$Ringed_date, format="%d/%m/%Y"),"%Y") seems to create NAs
dringed$Year=format(as.Date(dringed$Ringed_date, format="%m/%d/%Y"),"%Y") ### Month was first in the data
years_ringed=sort(unique(as.numeric(na.omit(dringed$Year))))
ringed_birds_per_year=years_ringed # initializing
for (k in 1:length(years_ringed)){
ringed_birds_per_year[k]=length(unique(dringed$Ring_No[dringed$Year==years_ringed[k]]))
}
plot(years_ringed,ringed_birds_per_year,type="h",lwd=5,col="red")
#ggplot(data=,aes(x=years_ringed, y=ringed_birds_per_year)) + geom_bar(stat="identity")
drecov$Year=format(as.Date(drecov$Date_recovered, format="%m/%d/%Y"),"%Y")
years_of_recovery=sort(unique(as.numeric(na.omit(drecov$Year))))
birds_recovered_per_year=years_of_recovery# initializing
for (k in 1:length(years_of_recovery)){
birds_recovered_per_year[k]=length(unique(drecov$Ring_No[drecov$Year==years_of_recovery[k]]))
}
plot(years_of_recovery,birds_recovered_per_year,type="h",lwd=5,col="blue")
#dringed$Year=format(as.Date(dringed$Ringed_date, format="%d/%m/%Y"),"%Y") seems to create NAs
dringed$Year=format(as.Date(dringed$Ringed_date, format="%m/%d/%Y"),"%Y") ### Month was first in the data
years_ringed=sort(unique(as.numeric(na.omit(dringed$Year))))
ringed_birds_per_year=years_ringed # initializing
for (k in 1:length(years_ringed)){
ringed_birds_per_year[k]=length(unique(dringed$Ring_No[dringed$Year==years_ringed[k]]))
}
plot(years_ringed,ringed_birds_per_year,type="h",lwd=5,col="red")
#ggplot(data=,aes(x=years_ringed, y=ringed_birds_per_year)) + geom_bar(stat="identity")
drecov$Year=format(as.Date(drecov$Date_recovered, format="%m/%d/%Y"),"%Y")
years_of_recovery=sort(unique(as.numeric(na.omit(drecov$Year))))
birds_recovered_per_year=years_of_recovery# initializing
for (k in 1:length(years_of_recovery)){
birds_recovered_per_year[k]=length(unique(drecov$Ring_No[drecov$Year==years_of_recovery[k]]))
}
plot(years_of_recovery,birds_recovered_per_year,type="h",lwd=5,col="blue")
bird_recovered_list=unique(drecov$Ring_No)
ntimes_recovered=rep(0,length(bird_recovered_list))
for (k in 1:length(bird_recovered_list)){
ntimes_recovered[k]=sum(drecov$Ring_No==bird_recovered_list[k])
}
plot(bird_recovered_list,ntimes_recovered,type="o",lwd=1,col="black",xlab="Bird ID",ylab= "Ntimes recovered")
table(ntimes_recovered)
table(drecov$Accurancy_of_date_Euring_code)
## Check the birds whose dates are poorly known
drecov$Year[(drecov$Accurancy_of_date_Euring_code %in% c(8,9))]
drecov$Condition_Euring_code[(drecov$Accurancy_of_date_Euring_code %in% c(8,9))]
head(drecov)
drecov[(drecov$Accurancy_of_date_Euring_code %in% c(8,9)),]
drecov[(drecov$Accurancy_of_date_Euring_code %in% c(8,9)),]
long_dead_birds=drecov[(drecov$Accurancy_of_date_Euring_code %in% c(8,9)),]
head(long_dead_birds)
long_dead_birds$When.dead
nrow(long_dead_birds)
grepl("d","died")
long_dead_birds$Ring_No[grepl("D",long_dead_birds$When.dead)]
long_dead_birds$When.dead[grepl("D",long_dead_birds$When.dead)]
long_dead_birds$Ring_No[grepl("D",long_dead_birds$When.dead)]
long_dead_birds$When.dead[grepl("D",long_dead_birds$When.dead)]
